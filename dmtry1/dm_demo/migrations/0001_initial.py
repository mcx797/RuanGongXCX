# Generated by Django 3.0.5 on 2020-05-07 03:45

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AchievementAuthenTab',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('scholar_id', models.IntegerField()),
                ('a_name', models.CharField(max_length=30)),
                ('year', models.CharField(max_length=5)),
                ('author_name', models.CharField(max_length=30)),
                ('citation', models.IntegerField()),
                ('j_a_name', models.CharField(max_length=30)),
                ('file', models.CharField(max_length=60)),
                ('link', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'achievement_authen_tab',
            },
        ),
        migrations.CreateModel(
            name='AchievementTab',
            fields=[
                ('a_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('year', models.CharField(max_length=5)),
                ('author_name', models.CharField(max_length=50)),
                ('citation', models.IntegerField()),
                ('j_a_name', models.CharField(max_length=30)),
                ('file', models.CharField(max_length=60)),
                ('link', models.CharField(max_length=60)),
                ('get_id', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'achievement_tab',
            },
        ),
        migrations.CreateModel(
            name='add_achievement_tab',
            fields=[
                ('temp_id', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.TextField(max_length=150)),
                ('author', models.TextField(max_length=300)),
                ('get_ach_id', models.IntegerField(default=0)),
                ('get_auth_id', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'add_achievement_tab',
            },
        ),
        migrations.CreateModel(
            name='AdminTab',
            fields=[
                ('id', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=16)),
                ('errors', models.IntegerField()),
            ],
            options={
                'db_table': 'admin_tab',
            },
        ),
        migrations.CreateModel(
            name='authen_tab',
            fields=[
                ('authen_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=30)),
                ('name', models.CharField(max_length=30)),
                ('sno', models.CharField(max_length=30)),
                ('identity', models.SmallIntegerField(choices=[(0, '普通用户'), (1, '学者用户'), (2, '学生用户')])),
            ],
            options={
                'db_table': 'authen_tab',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('d_id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=30)),
                ('brief', models.CharField(max_length=600)),
            ],
            options={
                'db_table': 'department_tab',
            },
        ),
        migrations.CreateModel(
            name='new_achievement_tab',
            fields=[
                ('a_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('year', models.CharField(max_length=5)),
                ('user_name', models.CharField(max_length=50)),
                ('citation', models.IntegerField()),
                ('j_a_name', models.CharField(max_length=30)),
                ('file', models.CharField(max_length=60)),
                ('link', models.CharField(max_length=60)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('get_id', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'new_achievement_tab',
            },
        ),
        migrations.CreateModel(
            name='ReportTab',
            fields=[
                ('r_id', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField()),
                ('user_name', models.CharField(max_length=30)),
                ('information', models.CharField(max_length=300)),
                ('flag', models.IntegerField()),
            ],
            options={
                'db_table': 'report_tab',
            },
        ),
        migrations.CreateModel(
            name='SchAchAuthenTab',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('scholar_id', models.IntegerField()),
                ('a_id', models.IntegerField()),
            ],
            options={
                'db_table': 'sch_ach_authen_tab',
            },
        ),
        migrations.CreateModel(
            name='ScholarAchievementTab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scholar_id', models.IntegerField()),
                ('a_id', models.IntegerField()),
            ],
            options={
                'db_table': 'scholar_achievement_tab',
            },
        ),
        migrations.CreateModel(
            name='ScholarTab',
            fields=[
                ('user_id', models.IntegerField(unique=True)),
                ('scholar_id', models.AutoField(primary_key=True, serialize=False)),
                ('school', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=30)),
                ('p_title', models.CharField(max_length=30)),
                ('get_id', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'scholar_tab',
            },
        ),
        migrations.CreateModel(
            name='student_tab',
            fields=[
                ('user_id', models.IntegerField()),
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('school', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=30)),
            ],
            options={
                'db_table': 'student_tab',
            },
        ),
        migrations.CreateModel(
            name='user_authen_tab',
            fields=[
                ('u_id', models.AutoField(primary_key=True, serialize=False)),
                ('authen_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'user_authen_tab',
            },
        ),
        migrations.CreateModel(
            name='user_tab',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=30)),
                ('wechatid', models.CharField(max_length=30)),
                ('authority', models.SmallIntegerField(choices=[(0, '普通用户'), (1, '学者用户'), (2, '学生用户')])),
            ],
            options={
                'db_table': 'user_tab',
            },
        ),
    ]
